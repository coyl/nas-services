#------------- docker preparations -------------#
execute = {sh,-c,/usr/bin/php7 /usr/share/webapps/rutorrent/php/initplugins.php abc &}
execute.nothrow = rm,/run/php/.rtorrent.sock
network.scgi.open_local = /run/php/.rtorrent.sock
schedule = socket_chmod,0,0,"execute=chmod,0660,/run/php/.rtorrent.sock"
schedule = socket_chgrp,0,0,"execute=chgrp,abc,/run/php/.rtorrent.sock"
log.open_file = "rtorrent", /config/log/rtorrent/rtorrent.log
log.add_output = "info", "rtorrent"

directory.default.set = /downloads/incoming
session.path.set = /config/rtorrent/rtorrent_sess

encoding.add = utf8
system.umask.set = 0027
system.cwd.set = (directory.default)
network.http.dns_cache_timeout.set = 25

#---------------- networking ------------------#
## Listening port for incoming peer traffic (fixed; you can also randomize it)
network.port_range.set = 50000-50000
network.port_random.set = no

## Tracker-less torrent and UDP tracker support
## (conservative settings for 'private' trackers, change for 'public')
dht.mode.set = disable
protocol.pex.set = no

trackers.use_udp.set = no

## Peer settings
throttle.max_uploads.set = 100
throttle.max_uploads.global.set = 250

throttle.min_peers.normal.set = 20
throttle.max_peers.normal.set = 60
throttle.min_peers.seed.set = 30
throttle.max_peers.seed.set = 80
trackers.numwant.set = 80

protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

## Limits for file handle resources, this is optimized for
## an `ulimit` of 1024 (a common default). You MUST leave
## a ceiling of handles reserved for rTorrent's internal needs!
network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300


## Memory resource usage (increase if you have a large number of items loaded,
## and/or the available resources to spend)
pieces.memory.max.set = 1800M
network.xmlrpc.size_limit.set = 4M

# Watching directories
schedule2 = watch_start_tvs, 10, 10, ((load.start_verbose, "/watch/tvshows/*.torrent", "d.custom1.set=tvshows"))
schedule2 = watch_start_mvs, 10, 10, ((load.start_verbose, "/watch/movies/*.torrent", "d.custom1.set=movies"))
schedule2 = watch_start_etc, 10, 10, ((load.start_verbose, "/watch/etc/*.torrent", "d.custom1.set=etc"))

schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace, 500M))

# Add new method to get finished dir
method.insert = d.final_dir, simple, "cat=\"/downloads/\", (d.custom1)"

# Variant 1. On completion, move the torrent to the directory from custom1.
method.set_key = event.download.finished,move_complete,"d.directory.set=(d.final_dir);execute=mv,-u,(d.base_path),(d.final_dir)"

